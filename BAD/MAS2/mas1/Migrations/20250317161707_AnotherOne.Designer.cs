// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mas1.Data;

#nullable disable

namespace mas1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250317161707_AnotherOne")]
    partial class AnotherOne
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("mas1.Models.Discount", b =>
                {
                    b.Property<int>("DiscountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DiscountPercentage")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GroupSize")
                        .HasColumnType("INTEGER");

                    b.HasKey("DiscountID");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            DiscountID = 1,
                            DiscountPercentage = 10,
                            GroupSize = 10
                        },
                        new
                        {
                            DiscountID = 2,
                            DiscountPercentage = 15,
                            GroupSize = 15
                        });
                });

            modelBuilder.Entity("mas1.Models.Experience", b =>
                {
                    b.Property<int>("ExperienceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProviderID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ExperienceID");

                    b.HasIndex("ProviderID");

                    b.ToTable("Experiences");

                    b.HasData(
                        new
                        {
                            ExperienceID = 1,
                            Description = "Jumping out of a plane",
                            Name = "Skydiving",
                            Price = 250,
                            ProviderID = 1
                        },
                        new
                        {
                            ExperienceID = 2,
                            Description = "Swimming with sharks",
                            Name = "Scuba Diving",
                            Price = 200,
                            ProviderID = 2
                        },
                        new
                        {
                            ExperienceID = 3,
                            Description = "Hiking above the clouds",
                            Name = "Mountain Hiking",
                            Price = 100,
                            ProviderID = 3
                        });
                });

            modelBuilder.Entity("mas1.Models.ExperienceBooking", b =>
                {
                    b.Property<int>("ExperienceBookingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExperienceID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GuestID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ReservationID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ExperienceBookingID");

                    b.HasIndex("ExperienceID");

                    b.HasIndex("GuestID");

                    b.HasIndex("ReservationID");

                    b.ToTable("ExperienceBookings");

                    b.HasData(
                        new
                        {
                            ExperienceBookingID = 1,
                            ExperienceID = 1,
                            GuestID = 22,
                            ReservationID = 1
                        },
                        new
                        {
                            ExperienceBookingID = 2,
                            ExperienceID = 2,
                            GuestID = 23,
                            ReservationID = 2
                        },
                        new
                        {
                            ExperienceBookingID = 3,
                            ExperienceID = 3,
                            GuestID = 24,
                            ReservationID = 3
                        });
                });

            modelBuilder.Entity("mas1.Models.Guest", b =>
                {
                    b.Property<int>("GuestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GuestID");

                    b.ToTable("Guest");

                    b.HasData(
                        new
                        {
                            GuestID = 22,
                            Age = 54,
                            Name = "John Watson",
                            PhoneNumber = "8888 8888"
                        },
                        new
                        {
                            GuestID = 23,
                            Age = 34,
                            Name = "Sherlock Holmes",
                            PhoneNumber = "2222 2222"
                        },
                        new
                        {
                            GuestID = 24,
                            Age = 25,
                            Name = "Lara Croft",
                            PhoneNumber = "1234 5678"
                        });
                });

            modelBuilder.Entity("mas1.Models.Provider", b =>
                {
                    b.Property<int>("ProviderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BusinessAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("CVR")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ProviderID");

                    b.ToTable("Providers");

                    b.HasData(
                        new
                        {
                            ProviderID = 1,
                            BusinessAddress = "Finlands Gade 27",
                            CVR = "98765432",
                            PhoneNumber = "98765432"
                        },
                        new
                        {
                            ProviderID = 2,
                            BusinessAddress = "Finlands Gade 25",
                            CVR = "564323567",
                            PhoneNumber = "35246543"
                        },
                        new
                        {
                            ProviderID = 3,
                            BusinessAddress = "Finlands Gade 22",
                            CVR = "42356754",
                            PhoneNumber = "5465436"
                        });
                });

            modelBuilder.Entity("mas1.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GuestID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SharedExperienceID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ReservationID");

                    b.HasIndex("GuestID");

                    b.HasIndex("SharedExperienceID");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            ReservationID = 1,
                            GuestID = 22,
                            SharedExperienceID = 1
                        },
                        new
                        {
                            ReservationID = 2,
                            GuestID = 23,
                            SharedExperienceID = 2
                        },
                        new
                        {
                            ReservationID = 3,
                            GuestID = 24,
                            SharedExperienceID = 1
                        });
                });

            modelBuilder.Entity("mas1.Models.SharedExperience", b =>
                {
                    b.Property<int>("SharedExperienceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("DiscountId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExperienceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ExperienceName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SharedExperienceID");

                    b.HasIndex("DiscountId");

                    b.HasIndex("ExperienceId");

                    b.ToTable("SharedExperiences");

                    b.HasData(
                        new
                        {
                            SharedExperienceID = 1,
                            Date = new DateTime(2024, 3, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountId = 1,
                            ExperienceId = 1,
                            ExperienceName = "Test 1"
                        },
                        new
                        {
                            SharedExperienceID = 2,
                            Date = new DateTime(2024, 3, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            DiscountId = 2,
                            ExperienceId = 2,
                            ExperienceName = "Test 2"
                        });
                });

            modelBuilder.Entity("mas1.Models.Experience", b =>
                {
                    b.HasOne("mas1.Models.Provider", null)
                        .WithMany("Experiences")
                        .HasForeignKey("ProviderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("mas1.Models.ExperienceBooking", b =>
                {
                    b.HasOne("mas1.Models.Experience", "Experience")
                        .WithMany()
                        .HasForeignKey("ExperienceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mas1.Models.Guest", "Guest")
                        .WithMany()
                        .HasForeignKey("GuestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mas1.Models.Reservation", "Reservation")
                        .WithMany()
                        .HasForeignKey("ReservationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Experience");

                    b.Navigation("Guest");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("mas1.Models.Reservation", b =>
                {
                    b.HasOne("mas1.Models.Guest", "Guest")
                        .WithMany()
                        .HasForeignKey("GuestID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mas1.Models.SharedExperience", "SharedExperience")
                        .WithMany("Reservations")
                        .HasForeignKey("SharedExperienceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");

                    b.Navigation("SharedExperience");
                });

            modelBuilder.Entity("mas1.Models.SharedExperience", b =>
                {
                    b.HasOne("mas1.Models.Discount", "Discount")
                        .WithMany()
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mas1.Models.Experience", "Experience")
                        .WithMany()
                        .HasForeignKey("ExperienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discount");

                    b.Navigation("Experience");
                });

            modelBuilder.Entity("mas1.Models.Provider", b =>
                {
                    b.Navigation("Experiences");
                });

            modelBuilder.Entity("mas1.Models.SharedExperience", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
