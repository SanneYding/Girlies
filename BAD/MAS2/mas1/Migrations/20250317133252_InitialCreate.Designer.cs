// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mas1.Data;

#nullable disable

namespace mas1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250317133252_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("mas1.Models.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Discounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 10.0,
                            Code = "SUMMER2025"
                        },
                        new
                        {
                            Id = 2,
                            Amount = 15.0,
                            Code = "WINTER2025"
                        });
                });

            modelBuilder.Entity("mas1.Models.Experience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProviderId");

                    b.ToTable("Experiences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Skydiving",
                            ProviderId = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Scuba Diving",
                            ProviderId = 0
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mountain Hiking",
                            ProviderId = 0
                        });
                });

            modelBuilder.Entity("mas1.Models.ExperienceBooking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExperienceId")
                        .HasColumnType("int");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExperienceId");

                    b.HasIndex("ReservationId");

                    b.ToTable("ExperienceBookings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExperienceId = 1,
                            ReservationId = 1
                        },
                        new
                        {
                            Id = 2,
                            ExperienceId = 2,
                            ReservationId = 2
                        },
                        new
                        {
                            Id = 3,
                            ExperienceId = 3,
                            ReservationId = 3
                        });
                });

            modelBuilder.Entity("mas1.Models.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("mas1.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GuestName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SharedExperienceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SharedExperienceId");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GuestName = "John Doe",
                            SharedExperienceId = 0
                        },
                        new
                        {
                            Id = 2,
                            GuestName = "Jane Smith",
                            SharedExperienceId = 0
                        },
                        new
                        {
                            Id = 3,
                            GuestName = "Alice Johnson",
                            SharedExperienceId = 0
                        });
                });

            modelBuilder.Entity("mas1.Models.SharedExperience", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DiscountId")
                        .HasColumnType("int");

                    b.Property<int>("ExperienceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DiscountId");

                    b.HasIndex("ExperienceId");

                    b.ToTable("SharedExperiences");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiscountId = 1,
                            ExperienceId = 1
                        },
                        new
                        {
                            Id = 2,
                            DiscountId = 2,
                            ExperienceId = 2
                        });
                });

            modelBuilder.Entity("mas1.Models.Experience", b =>
                {
                    b.HasOne("mas1.Models.Provider", "Provider")
                        .WithMany("Experiences")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("mas1.Models.ExperienceBooking", b =>
                {
                    b.HasOne("mas1.Models.Experience", "Experience")
                        .WithMany("ExperienceBookings")
                        .HasForeignKey("ExperienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mas1.Models.Reservation", "Reservation")
                        .WithMany()
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Experience");

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("mas1.Models.Reservation", b =>
                {
                    b.HasOne("mas1.Models.SharedExperience", "SharedExperience")
                        .WithMany("Reservations")
                        .HasForeignKey("SharedExperienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SharedExperience");
                });

            modelBuilder.Entity("mas1.Models.SharedExperience", b =>
                {
                    b.HasOne("mas1.Models.Discount", "Discount")
                        .WithMany()
                        .HasForeignKey("DiscountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mas1.Models.Experience", "Experience")
                        .WithMany("SharedExperiences")
                        .HasForeignKey("ExperienceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discount");

                    b.Navigation("Experience");
                });

            modelBuilder.Entity("mas1.Models.Experience", b =>
                {
                    b.Navigation("ExperienceBookings");

                    b.Navigation("SharedExperiences");
                });

            modelBuilder.Entity("mas1.Models.Provider", b =>
                {
                    b.Navigation("Experiences");
                });

            modelBuilder.Entity("mas1.Models.SharedExperience", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
